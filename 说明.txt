1）、为什么要学nodeJs?
    1、它火
    2、它强大，很多自动化工具都用它来开发的

2）、nodeJs版本
    偶数为稳定版本，
    奇数为非稳定版本

3）、安装：
    1、官网下载
    2、下一步..安装
    3、cmd/gitbash, 输入 node -v
    4、可以通过gitbash来执行Node命令

4)、在gitbash命令行
    1、输入node
    2、输入: var a = 1; b = 1; function add(a,b){ return a+b }; console.log( add(a,b) ); 回车
    3、输入window  报错
    4、输入process  回车

5）、
    javascript天生就缺少一种模块管理机制来隔离实现不同功能
    因此在javascript经常用命名空间的方式，把变量和函数限制在某一作用域内。
    比如jquery里有很多属性和方法，直接是调用不了的，要通过$符号来调用。

6)、模块的流程：
    1、创建模块： student.js
    2、暴露模块： export.add = add;
    3、加载模块： var student = require('./studuent.js');
    4、使用模块:  student.add("学生A");

    详情看例子： schoolModel模块

7）、Url网址解析方法
    在gitbash里
    输入node 回车
    输入url 回车
    输入url.parse("http://immoc.com:8080/couce/list?form=scott&&course=node#floor1")  回车
    输入url.parse("http://immoc.com:8080/couce/list?form=scott&&course=node#floor1", true)  回车
    输入url.parse("http://immoc.com:8080/couce/list?form=scott&&course=node#floor1", true, true)  回车
    输入 url.resolve('http://imooc.com','/course/list'); 回车

8)、http:
	输入网址回车：
		1、chrome搜索自身的DNS缓存，看有没有要找的域名以及缓存的ip地址。缓存大概一分钟时间。 如果有缓存，看有没有过期，如果过期，解析就结束
		2、如果没有找到缓存，会搜索浏览器自身系统的DNS缓存，如果没有找到，或者缓存失效，也会停止搜索，解析结束。
		3、读取一下本地的HOST文件
		4、发起一个DNS调用
		5、宽带运营商服务器，它会先查看自身的缓存
		6、如果也没有找到，那运营商服务器会发起一个迭代的DNS解析的请求。
		7、层层问路
		8、拿到了ip地址，返回给操作系统内核，并缓存起来。
		9、操作系统内核把结果返回给浏览器。
		10、最终浏览器拿到了对应的ip地址
		11、浏览器发起3次握手：  1： 有没有空啊，咋两唠唠嗑.  2: 有空啊，唠嗑就唠嗑，怕你啊.  3：okay，咋们开始唠嗑吧。
		12、tcp/ip连接起来之后，浏览器就可以向服务器发送http请求了。比如用get方法请求一个根域里的域名。
		13、服务器端接收请求之后，根据参数路径，做一些处理，把结果返回给浏览器
		14、浏览器拿到数据，渲染页面	
		
		
		



